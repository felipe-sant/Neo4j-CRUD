[
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "asdict",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "asdict",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "asdict",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "asdict",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "src.classes.produto",
        "description": "src.classes.produto",
        "isExtraImport": true,
        "detail": "src.classes.produto",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "src.classes.produto",
        "description": "src.classes.produto",
        "isExtraImport": true,
        "detail": "src.classes.produto",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "src.classes.produto",
        "description": "src.classes.produto",
        "isExtraImport": true,
        "detail": "src.classes.produto",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "src.classes.produto",
        "description": "src.classes.produto",
        "isExtraImport": true,
        "detail": "src.classes.produto",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "src.classes.produto",
        "description": "src.classes.produto",
        "isExtraImport": true,
        "detail": "src.classes.produto",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "src.classes.produto",
        "description": "src.classes.produto",
        "isExtraImport": true,
        "detail": "src.classes.produto",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "src.classes.produto",
        "description": "src.classes.produto",
        "isExtraImport": true,
        "detail": "src.classes.produto",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "src.classes.produto",
        "description": "src.classes.produto",
        "isExtraImport": true,
        "detail": "src.classes.produto",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "src.classes.produto",
        "description": "src.classes.produto",
        "isExtraImport": true,
        "detail": "src.classes.produto",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "importPath": "src.classes.usuario",
        "description": "src.classes.usuario",
        "isExtraImport": true,
        "detail": "src.classes.usuario",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "importPath": "src.classes.usuario",
        "description": "src.classes.usuario",
        "isExtraImport": true,
        "detail": "src.classes.usuario",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "importPath": "src.classes.usuario",
        "description": "src.classes.usuario",
        "isExtraImport": true,
        "detail": "src.classes.usuario",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "importPath": "src.classes.usuario",
        "description": "src.classes.usuario",
        "isExtraImport": true,
        "detail": "src.classes.usuario",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "importPath": "src.classes.usuario",
        "description": "src.classes.usuario",
        "isExtraImport": true,
        "detail": "src.classes.usuario",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "importPath": "src.classes.usuario",
        "description": "src.classes.usuario",
        "isExtraImport": true,
        "detail": "src.classes.usuario",
        "documentation": {}
    },
    {
        "label": "GraphDatabase",
        "importPath": "neo4j",
        "description": "neo4j",
        "isExtraImport": true,
        "detail": "neo4j",
        "documentation": {}
    },
    {
        "label": "driver",
        "importPath": "src.database.connection",
        "description": "src.database.connection",
        "isExtraImport": true,
        "detail": "src.database.connection",
        "documentation": {}
    },
    {
        "label": "driver",
        "importPath": "src.database.connection",
        "description": "src.database.connection",
        "isExtraImport": true,
        "detail": "src.database.connection",
        "documentation": {}
    },
    {
        "label": "driver",
        "importPath": "src.database.connection",
        "description": "src.database.connection",
        "isExtraImport": true,
        "detail": "src.database.connection",
        "documentation": {}
    },
    {
        "label": "driver",
        "importPath": "src.database.connection",
        "description": "src.database.connection",
        "isExtraImport": true,
        "detail": "src.database.connection",
        "documentation": {}
    },
    {
        "label": "driver",
        "importPath": "src.database.connection",
        "description": "src.database.connection",
        "isExtraImport": true,
        "detail": "src.database.connection",
        "documentation": {}
    },
    {
        "label": "driver",
        "importPath": "src.database.connection",
        "description": "src.database.connection",
        "isExtraImport": true,
        "detail": "src.database.connection",
        "documentation": {}
    },
    {
        "label": "driver",
        "importPath": "src.database.connection",
        "description": "src.database.connection",
        "isExtraImport": true,
        "detail": "src.database.connection",
        "documentation": {}
    },
    {
        "label": "driver",
        "importPath": "src.database.connection",
        "description": "src.database.connection",
        "isExtraImport": true,
        "detail": "src.database.connection",
        "documentation": {}
    },
    {
        "label": "formatarTexto_azul",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_azul",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_azul",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_azul",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_azul",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_azul",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_amarelo",
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "isExtraImport": true,
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "Compra",
        "importPath": "src.classes.compra",
        "description": "src.classes.compra",
        "isExtraImport": true,
        "detail": "src.classes.compra",
        "documentation": {}
    },
    {
        "label": "Compra",
        "importPath": "src.classes.compra",
        "description": "src.classes.compra",
        "isExtraImport": true,
        "detail": "src.classes.compra",
        "documentation": {}
    },
    {
        "label": "Compra",
        "importPath": "src.classes.compra",
        "description": "src.classes.compra",
        "isExtraImport": true,
        "detail": "src.classes.compra",
        "documentation": {}
    },
    {
        "label": "Compra",
        "importPath": "src.classes.compra",
        "description": "src.classes.compra",
        "isExtraImport": true,
        "detail": "src.classes.compra",
        "documentation": {}
    },
    {
        "label": "Compra",
        "importPath": "src.classes.compra",
        "description": "src.classes.compra",
        "isExtraImport": true,
        "detail": "src.classes.compra",
        "documentation": {}
    },
    {
        "label": "Compra",
        "importPath": "src.classes.compra",
        "description": "src.classes.compra",
        "isExtraImport": true,
        "detail": "src.classes.compra",
        "documentation": {}
    },
    {
        "label": "Compra",
        "importPath": "src.classes.compra",
        "description": "src.classes.compra",
        "isExtraImport": true,
        "detail": "src.classes.compra",
        "documentation": {}
    },
    {
        "label": "Compra",
        "importPath": "src.classes.compra",
        "description": "src.classes.compra",
        "isExtraImport": true,
        "detail": "src.classes.compra",
        "documentation": {}
    },
    {
        "label": "Compra",
        "importPath": "src.classes.compra",
        "description": "src.classes.compra",
        "isExtraImport": true,
        "detail": "src.classes.compra",
        "documentation": {}
    },
    {
        "label": "count_nodes",
        "importPath": "src.database.count_nodes",
        "description": "src.database.count_nodes",
        "isExtraImport": true,
        "detail": "src.database.count_nodes",
        "documentation": {}
    },
    {
        "label": "count_nodes",
        "importPath": "src.database.count_nodes",
        "description": "src.database.count_nodes",
        "isExtraImport": true,
        "detail": "src.database.count_nodes",
        "documentation": {}
    },
    {
        "label": "count_nodes",
        "importPath": "src.database.count_nodes",
        "description": "src.database.count_nodes",
        "isExtraImport": true,
        "detail": "src.database.count_nodes",
        "documentation": {}
    },
    {
        "label": "count_nodes",
        "importPath": "src.database.count_nodes",
        "description": "src.database.count_nodes",
        "isExtraImport": true,
        "detail": "src.database.count_nodes",
        "documentation": {}
    },
    {
        "label": "count_nodes",
        "importPath": "src.database.count_nodes",
        "description": "src.database.count_nodes",
        "isExtraImport": true,
        "detail": "src.database.count_nodes",
        "documentation": {}
    },
    {
        "label": "Vendedor",
        "importPath": "src.classes.vendedor",
        "description": "src.classes.vendedor",
        "isExtraImport": true,
        "detail": "src.classes.vendedor",
        "documentation": {}
    },
    {
        "label": "Vendedor",
        "importPath": "src.classes.vendedor",
        "description": "src.classes.vendedor",
        "isExtraImport": true,
        "detail": "src.classes.vendedor",
        "documentation": {}
    },
    {
        "label": "Vendedor",
        "importPath": "src.classes.vendedor",
        "description": "src.classes.vendedor",
        "isExtraImport": true,
        "detail": "src.classes.vendedor",
        "documentation": {}
    },
    {
        "label": "Vendedor",
        "importPath": "src.classes.vendedor",
        "description": "src.classes.vendedor",
        "isExtraImport": true,
        "detail": "src.classes.vendedor",
        "documentation": {}
    },
    {
        "label": "Vendedor",
        "importPath": "src.classes.vendedor",
        "description": "src.classes.vendedor",
        "isExtraImport": true,
        "detail": "src.classes.vendedor",
        "documentation": {}
    },
    {
        "label": "Vendedor",
        "importPath": "src.classes.vendedor",
        "description": "src.classes.vendedor",
        "isExtraImport": true,
        "detail": "src.classes.vendedor",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "criarCompra",
        "importPath": "src.utils.criarCompra",
        "description": "src.utils.criarCompra",
        "isExtraImport": true,
        "detail": "src.utils.criarCompra",
        "documentation": {}
    },
    {
        "label": "insert_compra",
        "importPath": "src.database.insert_compra",
        "description": "src.database.insert_compra",
        "isExtraImport": true,
        "detail": "src.database.insert_compra",
        "documentation": {}
    },
    {
        "label": "menuCampoUsuario",
        "importPath": "src.layouts.menuCampoUsuario",
        "description": "src.layouts.menuCampoUsuario",
        "isExtraImport": true,
        "detail": "src.layouts.menuCampoUsuario",
        "documentation": {}
    },
    {
        "label": "criarProduto",
        "importPath": "src.utils.criarProduto",
        "description": "src.utils.criarProduto",
        "isExtraImport": true,
        "detail": "src.utils.criarProduto",
        "documentation": {}
    },
    {
        "label": "insert_produto",
        "importPath": "src.database.insert_produto",
        "description": "src.database.insert_produto",
        "isExtraImport": true,
        "detail": "src.database.insert_produto",
        "documentation": {}
    },
    {
        "label": "criarUsuario",
        "importPath": "src.utils.criarUsuario",
        "description": "src.utils.criarUsuario",
        "isExtraImport": true,
        "detail": "src.utils.criarUsuario",
        "documentation": {}
    },
    {
        "label": "insert_usuario",
        "importPath": "src.database.insert_usuario",
        "description": "src.database.insert_usuario",
        "isExtraImport": true,
        "detail": "src.database.insert_usuario",
        "documentation": {}
    },
    {
        "label": "criarVendedor",
        "importPath": "src.utils.criarVendedor",
        "description": "src.utils.criarVendedor",
        "isExtraImport": true,
        "detail": "src.utils.criarVendedor",
        "documentation": {}
    },
    {
        "label": "insert_vendedor",
        "importPath": "src.database.insert_vendedor",
        "description": "src.database.insert_vendedor",
        "isExtraImport": true,
        "detail": "src.database.insert_vendedor",
        "documentation": {}
    },
    {
        "label": "create_relation",
        "importPath": "src.database.create_relation",
        "description": "src.database.create_relation",
        "isExtraImport": true,
        "detail": "src.database.create_relation",
        "documentation": {}
    },
    {
        "label": "create_relation",
        "importPath": "src.database.create_relation",
        "description": "src.database.create_relation",
        "isExtraImport": true,
        "detail": "src.database.create_relation",
        "documentation": {}
    },
    {
        "label": "create_relation",
        "importPath": "src.database.create_relation",
        "description": "src.database.create_relation",
        "isExtraImport": true,
        "detail": "src.database.create_relation",
        "documentation": {}
    },
    {
        "label": "create_relation",
        "importPath": "src.database.create_relation",
        "description": "src.database.create_relation",
        "isExtraImport": true,
        "detail": "src.database.create_relation",
        "documentation": {}
    },
    {
        "label": "pegarUm",
        "importPath": "src.functions.pegarUm",
        "description": "src.functions.pegarUm",
        "isExtraImport": true,
        "detail": "src.functions.pegarUm",
        "documentation": {}
    },
    {
        "label": "pegarUm",
        "importPath": "src.functions.pegarUm",
        "description": "src.functions.pegarUm",
        "isExtraImport": true,
        "detail": "src.functions.pegarUm",
        "documentation": {}
    },
    {
        "label": "pegarUm",
        "importPath": "src.functions.pegarUm",
        "description": "src.functions.pegarUm",
        "isExtraImport": true,
        "detail": "src.functions.pegarUm",
        "documentation": {}
    },
    {
        "label": "pegarUm",
        "importPath": "src.functions.pegarUm",
        "description": "src.functions.pegarUm",
        "isExtraImport": true,
        "detail": "src.functions.pegarUm",
        "documentation": {}
    },
    {
        "label": "pegarUm",
        "importPath": "src.functions.pegarUm",
        "description": "src.functions.pegarUm",
        "isExtraImport": true,
        "detail": "src.functions.pegarUm",
        "documentation": {}
    },
    {
        "label": "pegarTodos",
        "importPath": "src.functions.pegarTodos",
        "description": "src.functions.pegarTodos",
        "isExtraImport": true,
        "detail": "src.functions.pegarTodos",
        "documentation": {}
    },
    {
        "label": "pegarTodos",
        "importPath": "src.functions.pegarTodos",
        "description": "src.functions.pegarTodos",
        "isExtraImport": true,
        "detail": "src.functions.pegarTodos",
        "documentation": {}
    },
    {
        "label": "pegarTodos",
        "importPath": "src.functions.pegarTodos",
        "description": "src.functions.pegarTodos",
        "isExtraImport": true,
        "detail": "src.functions.pegarTodos",
        "documentation": {}
    },
    {
        "label": "pegarTodos",
        "importPath": "src.functions.pegarTodos",
        "description": "src.functions.pegarTodos",
        "isExtraImport": true,
        "detail": "src.functions.pegarTodos",
        "documentation": {}
    },
    {
        "label": "search_nodes",
        "importPath": "src.database.search_nodes",
        "description": "src.database.search_nodes",
        "isExtraImport": true,
        "detail": "src.database.search_nodes",
        "documentation": {}
    },
    {
        "label": "search_nodes",
        "importPath": "src.database.search_nodes",
        "description": "src.database.search_nodes",
        "isExtraImport": true,
        "detail": "src.database.search_nodes",
        "documentation": {}
    },
    {
        "label": "definirProdutoDaCompra",
        "importPath": "src.functions.definirProdutoDaCompra",
        "description": "src.functions.definirProdutoDaCompra",
        "isExtraImport": true,
        "detail": "src.functions.definirProdutoDaCompra",
        "documentation": {}
    },
    {
        "label": "definirUsuarioDaCompra",
        "importPath": "src.functions.definirUsuarioDaCompra",
        "description": "src.functions.definirUsuarioDaCompra",
        "isExtraImport": true,
        "detail": "src.functions.definirUsuarioDaCompra",
        "documentation": {}
    },
    {
        "label": "limparTerminal",
        "importPath": "src.utils.limparTerminal",
        "description": "src.utils.limparTerminal",
        "isExtraImport": true,
        "detail": "src.utils.limparTerminal",
        "documentation": {}
    },
    {
        "label": "limparTerminal",
        "importPath": "src.utils.limparTerminal",
        "description": "src.utils.limparTerminal",
        "isExtraImport": true,
        "detail": "src.utils.limparTerminal",
        "documentation": {}
    },
    {
        "label": "limparTerminal",
        "importPath": "src.utils.limparTerminal",
        "description": "src.utils.limparTerminal",
        "isExtraImport": true,
        "detail": "src.utils.limparTerminal",
        "documentation": {}
    },
    {
        "label": "limparTerminal",
        "importPath": "src.utils.limparTerminal",
        "description": "src.utils.limparTerminal",
        "isExtraImport": true,
        "detail": "src.utils.limparTerminal",
        "documentation": {}
    },
    {
        "label": "limparTerminal",
        "importPath": "src.utils.limparTerminal",
        "description": "src.utils.limparTerminal",
        "isExtraImport": true,
        "detail": "src.utils.limparTerminal",
        "documentation": {}
    },
    {
        "label": "limparTerminal",
        "importPath": "src.utils.limparTerminal",
        "description": "src.utils.limparTerminal",
        "isExtraImport": true,
        "detail": "src.utils.limparTerminal",
        "documentation": {}
    },
    {
        "label": "limparTerminal",
        "importPath": "src.utils.limparTerminal",
        "description": "src.utils.limparTerminal",
        "isExtraImport": true,
        "detail": "src.utils.limparTerminal",
        "documentation": {}
    },
    {
        "label": "limparTerminal",
        "importPath": "src.utils.limparTerminal",
        "description": "src.utils.limparTerminal",
        "isExtraImport": true,
        "detail": "src.utils.limparTerminal",
        "documentation": {}
    },
    {
        "label": "listarProduto",
        "importPath": "src.functions.listarProduto",
        "description": "src.functions.listarProduto",
        "isExtraImport": true,
        "detail": "src.functions.listarProduto",
        "documentation": {}
    },
    {
        "label": "listarProduto",
        "importPath": "src.functions.listarProduto",
        "description": "src.functions.listarProduto",
        "isExtraImport": true,
        "detail": "src.functions.listarProduto",
        "documentation": {}
    },
    {
        "label": "setarUsuario",
        "importPath": "src.functions.setarUsuario",
        "description": "src.functions.setarUsuario",
        "isExtraImport": true,
        "detail": "src.functions.setarUsuario",
        "documentation": {}
    },
    {
        "label": "listarUsuario",
        "importPath": "src.functions.listarUsuario",
        "description": "src.functions.listarUsuario",
        "isExtraImport": true,
        "detail": "src.functions.listarUsuario",
        "documentation": {}
    },
    {
        "label": "listarUsuario",
        "importPath": "src.functions.listarUsuario",
        "description": "src.functions.listarUsuario",
        "isExtraImport": true,
        "detail": "src.functions.listarUsuario",
        "documentation": {}
    },
    {
        "label": "cadastrarCompra",
        "importPath": "src.functions.cadastrarCompra",
        "description": "src.functions.cadastrarCompra",
        "isExtraImport": true,
        "detail": "src.functions.cadastrarCompra",
        "documentation": {}
    },
    {
        "label": "listarCompra",
        "importPath": "src.functions.listarCompra",
        "description": "src.functions.listarCompra",
        "isExtraImport": true,
        "detail": "src.functions.listarCompra",
        "documentation": {}
    },
    {
        "label": "menuCompra",
        "importPath": "src.layouts.menuCompra",
        "description": "src.layouts.menuCompra",
        "isExtraImport": true,
        "detail": "src.layouts.menuCompra",
        "documentation": {}
    },
    {
        "label": "menuProduto",
        "importPath": "src.layouts.menuProduto",
        "description": "src.layouts.menuProduto",
        "isExtraImport": true,
        "detail": "src.layouts.menuProduto",
        "documentation": {}
    },
    {
        "label": "menuUsuario",
        "importPath": "src.layouts.menuUsuario",
        "description": "src.layouts.menuUsuario",
        "isExtraImport": true,
        "detail": "src.layouts.menuUsuario",
        "documentation": {}
    },
    {
        "label": "menuVendedor",
        "importPath": "src.layouts.menuVendedor",
        "description": "src.layouts.menuVendedor",
        "isExtraImport": true,
        "detail": "src.layouts.menuVendedor",
        "documentation": {}
    },
    {
        "label": "cadastrarProduto",
        "importPath": "src.functions.cadastrarProduto",
        "description": "src.functions.cadastrarProduto",
        "isExtraImport": true,
        "detail": "src.functions.cadastrarProduto",
        "documentation": {}
    },
    {
        "label": "cadastrarUsuario",
        "importPath": "src.functions.cadastrarUsuario",
        "description": "src.functions.cadastrarUsuario",
        "isExtraImport": true,
        "detail": "src.functions.cadastrarUsuario",
        "documentation": {}
    },
    {
        "label": "cadastrarVendedor",
        "importPath": "src.functions.cadastrarVendedor",
        "description": "src.functions.cadastrarVendedor",
        "isExtraImport": true,
        "detail": "src.functions.cadastrarVendedor",
        "documentation": {}
    },
    {
        "label": "listarVendedor",
        "importPath": "src.functions.listarVendedor",
        "description": "src.functions.listarVendedor",
        "isExtraImport": true,
        "detail": "src.functions.listarVendedor",
        "documentation": {}
    },
    {
        "label": "solicitarInput",
        "importPath": "src.utils.solicitarInput",
        "description": "src.utils.solicitarInput",
        "isExtraImport": true,
        "detail": "src.utils.solicitarInput",
        "documentation": {}
    },
    {
        "label": "solicitarInput",
        "importPath": "src.utils.solicitarInput",
        "description": "src.utils.solicitarInput",
        "isExtraImport": true,
        "detail": "src.utils.solicitarInput",
        "documentation": {}
    },
    {
        "label": "solicitarInput",
        "importPath": "src.utils.solicitarInput",
        "description": "src.utils.solicitarInput",
        "isExtraImport": true,
        "detail": "src.utils.solicitarInput",
        "documentation": {}
    },
    {
        "label": "solicitarInput",
        "importPath": "src.utils.solicitarInput",
        "description": "src.utils.solicitarInput",
        "isExtraImport": true,
        "detail": "src.utils.solicitarInput",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "menuPrincipal",
        "importPath": "src.layouts.menuPrincipal",
        "description": "src.layouts.menuPrincipal",
        "isExtraImport": true,
        "detail": "src.layouts.menuPrincipal",
        "documentation": {}
    },
    {
        "label": "Compra",
        "kind": 6,
        "importPath": "src.classes.compra",
        "description": "src.classes.compra",
        "peekOfCode": "class Compra:\n    id: str = field(default=None, repr=False)\n    dataCompra: str = field(default=\"\")\n    valorTotal: float = field(default=0.0)\n    usuario: dict[str, any] = field(default_factory=dict)\n    produtos: list[dict[str, any]] = field(default_factory=list)\n    def __str__(self) -> str:\n        listagem = \"\"\n        listagem += f\"id: {self.id}\\n\" if self.id is not None else \"\"\n        listagem += f\"dataCompra: {self.dataCompra}\\n\" if self.dataCompra != \"\" else \"\"",
        "detail": "src.classes.compra",
        "documentation": {}
    },
    {
        "label": "Produto",
        "kind": 6,
        "importPath": "src.classes.produto",
        "description": "src.classes.produto",
        "peekOfCode": "class Produto:\n    id: str = field(default=None, repr=False)\n    nome: str = field(default=\"\")\n    descricao: str = field(default=\"\")\n    preco: float = field(default=0.0)\n    estoque: int = field(default=0)\n    vendedor: dict[str, any] = field(default_factory=dict)\n    def __str__(self) -> str:\n        listagem = \"\"\n        listagem += f\"id: {self.id}\\n\" if self.id is not None else \"\"",
        "detail": "src.classes.produto",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "kind": 6,
        "importPath": "src.classes.usuario",
        "description": "src.classes.usuario",
        "peekOfCode": "class Usuario:\n    id: str = field(default=None, repr=False)\n    nome: str = field(default=\"\")\n    endereco: str = field(default=\"\")\n    rg: str = field(default=\"\")\n    favoritos: list[dict[str, any]] = field(default_factory=list)\n    def __str__(self) -> str:\n        listagem = \"\"\n        listagem += f\"id: {self.id}\\n\" if self.id is not None else \"\"\n        listagem += f\"nome: {self.nome}\\n\" if self.nome != \"\" else \"\"",
        "detail": "src.classes.usuario",
        "documentation": {}
    },
    {
        "label": "Vendedor",
        "kind": 6,
        "importPath": "src.classes.vendedor",
        "description": "src.classes.vendedor",
        "peekOfCode": "class Vendedor:\n    id: str = field(default=None, repr=False)\n    nome: str = field(default=\"\")\n    rg: str = field(default=\"\")\n    produtos: list[dict[str, any]] = field(default_factory=list)\n    def __str__(self) -> str:\n        listagem = \"\"\n        listagem += f\"id: {self.id}\\n\" if self.id is not None else \"\"\n        listagem += f\"nome: {self.nome}\\n\" if self.nome != \"\" else \"\"\n        listagem += f\"rg: {self.rg}\\n\" if self.rg != \"\" else \"\"",
        "detail": "src.classes.vendedor",
        "documentation": {}
    },
    {
        "label": "uri",
        "kind": 5,
        "importPath": "src.database.connection",
        "description": "src.database.connection",
        "peekOfCode": "uri = \"neo4j+s://e8f76211.databases.neo4j.io\"\nauth = (\"neo4j\", \"xhxov6nnL0M7o7VomqQpYkxxXas1Q2k3EcZZiv_d3xI\")\ndriver = GraphDatabase.driver(\n    uri=uri, \n    auth=auth,\n    max_connection_lifetime=30,  # Tempo máximo de vida da conexão (em segundos)\n    max_connection_pool_size=50,  # Tamanho máximo do pool de conexões\n    connection_timeout=15  # Tempo limite de conexão (em segundos)\n)\n# Path: src/database/connection.py",
        "detail": "src.database.connection",
        "documentation": {}
    },
    {
        "label": "auth",
        "kind": 5,
        "importPath": "src.database.connection",
        "description": "src.database.connection",
        "peekOfCode": "auth = (\"neo4j\", \"xhxov6nnL0M7o7VomqQpYkxxXas1Q2k3EcZZiv_d3xI\")\ndriver = GraphDatabase.driver(\n    uri=uri, \n    auth=auth,\n    max_connection_lifetime=30,  # Tempo máximo de vida da conexão (em segundos)\n    max_connection_pool_size=50,  # Tamanho máximo do pool de conexões\n    connection_timeout=15  # Tempo limite de conexão (em segundos)\n)\n# Path: src/database/connection.py",
        "detail": "src.database.connection",
        "documentation": {}
    },
    {
        "label": "driver",
        "kind": 5,
        "importPath": "src.database.connection",
        "description": "src.database.connection",
        "peekOfCode": "driver = GraphDatabase.driver(\n    uri=uri, \n    auth=auth,\n    max_connection_lifetime=30,  # Tempo máximo de vida da conexão (em segundos)\n    max_connection_pool_size=50,  # Tamanho máximo do pool de conexões\n    connection_timeout=15  # Tempo limite de conexão (em segundos)\n)\n# Path: src/database/connection.py",
        "detail": "src.database.connection",
        "documentation": {}
    },
    {
        "label": "count_nodes",
        "kind": 2,
        "importPath": "src.database.count_nodes",
        "description": "src.database.count_nodes",
        "peekOfCode": "def count_nodes(collection: str) -> int:\n    try:\n        def count_query(tx):\n            query = f\"MATCH (u:{collection}) RETURN count(u) AS total\"\n            result = tx.run(query)\n            record = result.single()\n            return record[\"total\"] if record else 0\n        with driver.session() as session:\n            total = session.read_transaction(count_query)\n            return total",
        "detail": "src.database.count_nodes",
        "documentation": {}
    },
    {
        "label": "create_relation",
        "kind": 2,
        "importPath": "src.database.create_relation",
        "description": "src.database.create_relation",
        "peekOfCode": "def create_relation(primeiroNó: str, segundoNó: str, nomeDaRelacao: str) -> str | None:\n    try:\n        querry = f'''\n        MATCH (a:{primeiroNó}), (b:{segundoNó}) CREATE (a)-[:{nomeDaRelacao}]->(b)\n        '''\n        with driver.session() as session:\n            session.run(querry)\n            return f\"{formatarTexto_azul(\"Relação criada com sucesso!\")}\"\n    except Exception as e:\n        return None",
        "detail": "src.database.create_relation",
        "documentation": {}
    },
    {
        "label": "insert_compra",
        "kind": 2,
        "importPath": "src.database.insert_compra",
        "description": "src.database.insert_compra",
        "peekOfCode": "def insert_compra(compra: Compra) -> str:\n    try:\n        total = count_nodes(\"Compra\")\n        nodeid = total + 1\n        dataCompra = compra.dataCompra\n        valorTotal = compra.valorTotal\n        def create_compra(tx, purchaseid, dataCompra, valorTotal):\n            query = \"\"\"\n            CREATE (:Compra {id: $purchaseid, dataCompra: $dataCompra, valorTotal: $valorTotal})\n            \"\"\"",
        "detail": "src.database.insert_compra",
        "documentation": {}
    },
    {
        "label": "insert_produto",
        "kind": 2,
        "importPath": "src.database.insert_produto",
        "description": "src.database.insert_produto",
        "peekOfCode": "def insert_produto(produto: Produto) -> str:\n    try:\n        total = count_nodes(\"Produto\")\n        nodeid = total + 1\n        nome = produto.nome\n        descricao = produto.descricao\n        preco = produto.preco\n        estoque = produto.estoque\n        def create_produto(tx, productid, nome, descricao, preco, estoque):\n            query = \"\"\"",
        "detail": "src.database.insert_produto",
        "documentation": {}
    },
    {
        "label": "insert_usuario",
        "kind": 2,
        "importPath": "src.database.insert_usuario",
        "description": "src.database.insert_usuario",
        "peekOfCode": "def insert_usuario(usuario: Usuario) -> str:\n    try:\n        total = count_nodes(\"Usuario\")\n        nodeid = total + 1\n        nome = usuario.nome\n        endereco = usuario.endereco\n        rg = usuario.rg\n        def create_usuario(tx, userid, nome, endereco, rg):\n            querry = \"\"\"\n            CREATE (:Usuario {id: $userid, nome: $nome, endereco: $endereco, rg: $rg})",
        "detail": "src.database.insert_usuario",
        "documentation": {}
    },
    {
        "label": "insert_vendedor",
        "kind": 2,
        "importPath": "src.database.insert_vendedor",
        "description": "src.database.insert_vendedor",
        "peekOfCode": "def insert_vendedor(vendedor: Vendedor) -> str:\n    try:\n        total = count_nodes(\"Vendedor\")\n        nodeid = total + 1\n        nome = vendedor.nome\n        rg = vendedor.rg\n        def create_vendedor(tx, sellerid, nome, rg):\n            querry = \"\"\"\n            CREATE (:Vendedor {id: $sellerid, nome: $nome, rg: $rg})\n            \"\"\"",
        "detail": "src.database.insert_vendedor",
        "documentation": {}
    },
    {
        "label": "search_nodes",
        "kind": 2,
        "importPath": "src.database.search_nodes",
        "description": "src.database.search_nodes",
        "peekOfCode": "def search_nodes(collection: str, filter: Optional[str] = None) -> Optional[List[Dict[str, Any]]]:\n    try:\n        query = f\"MATCH (u:{collection})\"\n        if filter:\n            query += f\" WHERE u.{filter}\"\n        query += \" RETURN u\"\n        with driver.session() as session:\n            result = session.run(query)\n            nodes = [record[\"u\"] for record in result]\n        return nodes",
        "detail": "src.database.search_nodes",
        "documentation": {}
    },
    {
        "label": "cadastrarCompra",
        "kind": 2,
        "importPath": "src.functions.cadastrarCompra",
        "description": "src.functions.cadastrarCompra",
        "peekOfCode": "def cadastrarCompra():\n    try:\n        compra = criarCompra(isRequired=True)\n        compra.id = count_nodes(\"Compra\") + 1\n        result = insert_compra(compra)\n        menuCampoUsuario(compra)\n        print()\n        print(result)\n        input()\n    except Exception as e:",
        "detail": "src.functions.cadastrarCompra",
        "documentation": {}
    },
    {
        "label": "cadastrarProduto",
        "kind": 2,
        "importPath": "src.functions.cadastrarProduto",
        "description": "src.functions.cadastrarProduto",
        "peekOfCode": "def cadastrarProduto():\n    try:\n        produto = criarProduto(isRequired=True)\n        result = insert_produto(produto)\n        print()\n        print(result)\n        input()\n    except Exception as e:\n        print(f\"\\nFalha ao cadastrar produto: {formatarTexto_vermelho(str(e))}\")\n        input()",
        "detail": "src.functions.cadastrarProduto",
        "documentation": {}
    },
    {
        "label": "cadastrarUsuario",
        "kind": 2,
        "importPath": "src.functions.cadastrarUsuario",
        "description": "src.functions.cadastrarUsuario",
        "peekOfCode": "def cadastrarUsuario():\n    try:\n        usuario = criarUsuario(isRequired=True)\n        result = insert_usuario(usuario)\n        print()\n        print(result)\n        input()\n    except Exception as e:\n        print(f\"\\nFalha ao cadastrar usuário: {formatarTexto_vermelho(str(e))}\")\n        input()",
        "detail": "src.functions.cadastrarUsuario",
        "documentation": {}
    },
    {
        "label": "cadastrarVendedor",
        "kind": 2,
        "importPath": "src.functions.cadastrarVendedor",
        "description": "src.functions.cadastrarVendedor",
        "peekOfCode": "def cadastrarVendedor():\n    try:\n        vendedor = criarVendedor(isRequired=True)\n        result = insert_vendedor(vendedor)\n        print()\n        print(result)\n        input()\n    except Exception as e:\n        print(f\"\\nFalha ao cadastrar vendedor: {formatarTexto_vermelho(str(e))}\")\n        input()",
        "detail": "src.functions.cadastrarVendedor",
        "documentation": {}
    },
    {
        "label": "definirProdutoDaCompra",
        "kind": 2,
        "importPath": "src.functions.definirProdutoDaCompra",
        "description": "src.functions.definirProdutoDaCompra",
        "peekOfCode": "def definirProdutoDaCompra(produto: Produto, compra: Compra):\n    try:\n        produto = \"Produto {id: \" + str(produto.id) + \"}\"\n        compra = \"Compra {id: \" + str(compra.id) + \"}\"\n        result = create_relation(produto, compra, \"ESTA_EM\")\n        if result:\n            print()\n            print(result)\n            input()\n        else:",
        "detail": "src.functions.definirProdutoDaCompra",
        "documentation": {}
    },
    {
        "label": "definirProdutoDoVendedor",
        "kind": 2,
        "importPath": "src.functions.definirProdutoDoVendedor",
        "description": "src.functions.definirProdutoDoVendedor",
        "peekOfCode": "def definirProdutoDoVendedor(produto: Produto, vendedor: Vendedor):\n    try:\n        produto - f\"Produto {id: {produto.id}}\"\n        vendedor = f\"Vendedor {id: {vendedor.id}}\"\n        result = create_relation(produto, vendedor, \"PERTENCE_A\")\n        if result:\n            print()\n            print(result)\n            input()\n    except Exception as e:",
        "detail": "src.functions.definirProdutoDoVendedor",
        "documentation": {}
    },
    {
        "label": "definirUsuarioDaCompra",
        "kind": 2,
        "importPath": "src.functions.definirUsuarioDaCompra",
        "description": "src.functions.definirUsuarioDaCompra",
        "peekOfCode": "def definirUsuarioDaCompra(usuario: Usuario, compra: Compra):\n    try:\n        usuario = \"Usuario {id: \" + str(usuario.id) + \"}\"\n        compra = \"Compra {id: \" + str(compra.id) + \"}\"\n        result = create_relation(usuario, compra, \"FEZ\")\n        if result:\n            print()\n            print(result)\n            input()\n    except Exception as e:",
        "detail": "src.functions.definirUsuarioDaCompra",
        "documentation": {}
    },
    {
        "label": "listarCompra",
        "kind": 2,
        "importPath": "src.functions.listarCompra",
        "description": "src.functions.listarCompra",
        "peekOfCode": "def listarCompra():\n    try:\n        id = input(f\"Digite o {formatarTexto_negrito('ID')} da compra: {formatarTexto_italico('(deixe em branco para listar todas) ')}\")\n        if id == \"\":\n            compras = pegarTodos(\"Compra\")\n            if compras is None:\n                raise Exception(\"Nenhuma compra encontrada.\")\n            tamanhoTotal = len(compras)\n            count = 0\n            print()",
        "detail": "src.functions.listarCompra",
        "documentation": {}
    },
    {
        "label": "listarProduto",
        "kind": 2,
        "importPath": "src.functions.listarProduto",
        "description": "src.functions.listarProduto",
        "peekOfCode": "def listarProduto():\n    try:\n        id = input(f\"Digite o {formatarTexto_negrito(\"ID\")} do produto: {formatarTexto_italico('(deixe em branco para listar todos) ')}\")\n        if id == \"\":\n            produtos = pegarTodos(\"Produto\")\n            if produtos is None:\n                raise Exception(\"Nenhum produto encontrado.\")\n            tamanhoTotal = len(produtos)\n            count = 0\n            print()",
        "detail": "src.functions.listarProduto",
        "documentation": {}
    },
    {
        "label": "listarUsuario",
        "kind": 2,
        "importPath": "src.functions.listarUsuario",
        "description": "src.functions.listarUsuario",
        "peekOfCode": "def listarUsuario():\n    try:\n        id = input(f\"Digite o {formatarTexto_negrito(\"ID\")} do usuário: {formatarTexto_italico('(deixe em branco para listar todos) ')}\")\n        if id == \"\":\n            usuarios = pegarTodos(\"Usuario\")\n            if usuarios is None:\n                raise Exception(\"Nenhum usuário encontrado.\")\n            tamanhoTotal = len(usuarios)\n            count = 0\n            print()",
        "detail": "src.functions.listarUsuario",
        "documentation": {}
    },
    {
        "label": "listarVendedor",
        "kind": 2,
        "importPath": "src.functions.listarVendedor",
        "description": "src.functions.listarVendedor",
        "peekOfCode": "def listarVendedor():\n    try:\n        id = input(f\"Digite o {formatarTexto_negrito(\"ID\")} do vendedor: {formatarTexto_italico('(deixe em branco para listar todos) ')}\")\n        if id == \"\":\n            vendedores = pegarTodos(\"Vendedor\")\n            if vendedores is None:\n                raise Exception(\"Nenhum vendedor encontrado.\")\n            tamanhoTotal = len(vendedores)\n            count = 0\n            print()",
        "detail": "src.functions.listarVendedor",
        "documentation": {}
    },
    {
        "label": "pegarTodos",
        "kind": 2,
        "importPath": "src.functions.pegarTodos",
        "description": "src.functions.pegarTodos",
        "peekOfCode": "def pegarTodos(colecao: str) -> list[Compra] | list[Produto] | list[Usuario] | list[Vendedor] | None:\n    try:\n        result = search_nodes(colecao)\n        if result == [] or result is None:\n            raise\n        dados = []\n        match colecao:\n            case \"Usuario\":\n                for usuario in result:\n                    dados.append(Usuario.fromDict(usuario))",
        "detail": "src.functions.pegarTodos",
        "documentation": {}
    },
    {
        "label": "pegarUm",
        "kind": 2,
        "importPath": "src.functions.pegarUm",
        "description": "src.functions.pegarUm",
        "peekOfCode": "def pegarUm(colecao: str, identificador: str) -> Compra | Produto | Usuario | Vendedor | None:\n    try: \n        filtro = \"id = \" + identificador\n        result = search_nodes(colecao, filtro)\n        if result == [] or result is None:\n            raise\n        match colecao:\n            case \"Usuario\":\n                return Usuario.fromDict(result[0])\n            case \"Vendedor\":",
        "detail": "src.functions.pegarUm",
        "documentation": {}
    },
    {
        "label": "setarUsuario",
        "kind": 2,
        "importPath": "src.functions.setarUsuario",
        "description": "src.functions.setarUsuario",
        "peekOfCode": "def setarUsuario(compra: Compra):\n    try:\n        id = input(\"Digite o id do usuario: \")\n        usuario = pegarUm(\"Usuario\", id)\n        if usuario:\n            definirUsuarioDaCompra(usuario, compra)\n            return\n        else:\n            raise Exception(\"Usuário não encontrado\")\n    except Exception as e:",
        "detail": "src.functions.setarUsuario",
        "documentation": {}
    },
    {
        "label": "menuCampoProdutos",
        "kind": 2,
        "importPath": "src.layouts.menuCampoProdutos",
        "description": "src.layouts.menuCampoProdutos",
        "peekOfCode": "def menuCampoProdutos(colecao: Compra | Vendedor) -> Compra | Vendedor:\n    while True:\n        limparTerminal()\n        print(\"--\" * 21)\n        print(formatarTexto_negrito(\"Menu Campo Produtos\"))\n        print(\"1 - Adicionar Produto\")\n        print(\"2 - Listar Produtos Atuais\")\n        print(\"3 - Listar Produtos Totais\")\n        print(\"0 - Concluir\")\n        print(\"--\" * 21)",
        "detail": "src.layouts.menuCampoProdutos",
        "documentation": {}
    },
    {
        "label": "menuCampoUsuario",
        "kind": 2,
        "importPath": "src.layouts.menuCampoUsuario",
        "description": "src.layouts.menuCampoUsuario",
        "peekOfCode": "def menuCampoUsuario(colecao: Compra) -> Compra:\n    while True:\n        limparTerminal()\n        print(\"--\" * 21)\n        print(formatarTexto_negrito(\"Menu Campo Usuário\"))\n        print(\"1 - Setar Usuário\")\n        print(\"2 - Listar Usuários\")\n        print(\"--\" * 21)\n        opcao = input(\"\\nDigite a opção desejada: \")\n        match opcao:",
        "detail": "src.layouts.menuCampoUsuario",
        "documentation": {}
    },
    {
        "label": "menuCompra",
        "kind": 2,
        "importPath": "src.layouts.menuCompra",
        "description": "src.layouts.menuCompra",
        "peekOfCode": "def menuCompra():\n    while True:\n        limparTerminal()\n        print(\"-=\" * 20 + \"-\")\n        print(formatarTexto_negrito(\"Menu Compra\"))\n        print(\"1 - Cadastrar Compra\")\n        print(\"2 - Listar Compras\")\n        print(\"0 - Voltar\")\n        print(\"-=\" * 20 + \"-\")\n        opcao = input(\"\\nDigite a opção desejada: \")",
        "detail": "src.layouts.menuCompra",
        "documentation": {}
    },
    {
        "label": "menuPrincipal",
        "kind": 2,
        "importPath": "src.layouts.menuPrincipal",
        "description": "src.layouts.menuPrincipal",
        "peekOfCode": "def menuPrincipal():\n    while True:\n        limparTerminal()\n        print(\"==\" * 21)\n        print(formatarTexto_negrito(\"Menu Principal\"))\n        print(\"1 - CRUD de Compras\")\n        print(\"2 - CRUD de Produtos\")\n        print(\"3 - CRUD de Usuários\")\n        print(\"4 - CRUD de Vendedores\")\n        print(\"0 - Sair\")",
        "detail": "src.layouts.menuPrincipal",
        "documentation": {}
    },
    {
        "label": "menuProduto",
        "kind": 2,
        "importPath": "src.layouts.menuProduto",
        "description": "src.layouts.menuProduto",
        "peekOfCode": "def menuProduto():\n    while True:\n        limparTerminal()\n        print(\"-=\" * 20 + \"-\")\n        print(formatarTexto_negrito(\"Menu Produto\"))\n        print(\"1 - Cadastrar Produto\")\n        print(\"2 - Listar Produtos\")\n        print(\"0 - Voltar\")\n        print(\"-=\" * 20 + \"-\")\n        opcao = input(\"\\nDigite a opção desejada: \")",
        "detail": "src.layouts.menuProduto",
        "documentation": {}
    },
    {
        "label": "menuUsuario",
        "kind": 2,
        "importPath": "src.layouts.menuUsuario",
        "description": "src.layouts.menuUsuario",
        "peekOfCode": "def menuUsuario():\n    while True:\n        limparTerminal()\n        print(\"-=\" * 20 + \"-\")\n        print(formatarTexto_negrito(\"Menu Usuário\"))\n        print(\"1 - Cadastrar Usuário\")\n        print(\"2 - Listar Usuários\")\n        print(\"0 - Voltar\")\n        print(\"-=\" * 20 + \"-\")\n        opcao = input(\"\\nDigite a opção desejada: \")",
        "detail": "src.layouts.menuUsuario",
        "documentation": {}
    },
    {
        "label": "menuVendedor",
        "kind": 2,
        "importPath": "src.layouts.menuVendedor",
        "description": "src.layouts.menuVendedor",
        "peekOfCode": "def menuVendedor():\n    while True:\n        limparTerminal()\n        print(\"-=\" * 20 + \"-\")\n        print(formatarTexto_negrito(\"Menu Vendedor\"))\n        print(\"1 - Cadastrar Vendedor\")\n        print(\"2 - Listar Vendedores\")\n        print(\"0 - Voltar\")\n        print(\"-=\" * 20 + \"-\")\n        opcao = input(\"\\nDigite a opção desejada: \")",
        "detail": "src.layouts.menuVendedor",
        "documentation": {}
    },
    {
        "label": "criarCompra",
        "kind": 2,
        "importPath": "src.utils.criarCompra",
        "description": "src.utils.criarCompra",
        "peekOfCode": "def criarCompra(isRequired: bool, compra: Compra = None) -> Optional[Compra]:\n    try:\n        diaCompraText = f\"Digite o {formatarTexto_negrito(\"dia\")} da compra: \"\n        mesCompraText = f\"Digite o {formatarTexto_negrito(\"mês\")} da compra: \"\n        anoCompraText = f\"Digite o {formatarTexto_negrito(\"ano\")} da compra: \"\n        if compra:\n            diaCompraText = f\"Digite o novo {formatarTexto_negrito('dia')} da compra {formatarTexto_italico(f'(atual: {compra.dataCompra.split(\"/\")[0]})')}: \"\n            mesCompraText = f\"Digite o novo {formatarTexto_negrito('mês')} da compra {formatarTexto_italico(f'(atual: {compra.dataCompra.split(\"/\")[1]})')}: \"\n            anoCompraText = f\"Digite o novo {formatarTexto_negrito('ano')} da compra {formatarTexto_italico(f'(atual: {compra.dataCompra.split(\"/\")[2]})')}: \"\n        diaCompra = solicitarInput(diaCompraText, isRequired)",
        "detail": "src.utils.criarCompra",
        "documentation": {}
    },
    {
        "label": "criarProduto",
        "kind": 2,
        "importPath": "src.utils.criarProduto",
        "description": "src.utils.criarProduto",
        "peekOfCode": "def criarProduto(isRequired: bool, produto: Produto = None) -> Optional[Produto]:\n    try:\n        nomeText = f\"Digite o {formatarTexto_negrito('nome')} do produto: \"\n        descricaoText = f\"Digite a {formatarTexto_negrito('descrição')} do produto: \"\n        precoText = f\"Digite o {formatarTexto_negrito('preço')} do produto: \"\n        estoqueText = f\"Digite o {formatarTexto_negrito('estoque')} do produto: \"\n        if produto:\n            nomeText = f\"Digite o novo {formatarTexto_negrito('nome')} do produto {formatarTexto_italico(f\"(atual: {produto.nome})\")}: \"\n            descricaoText = f\"Digite a nova {formatarTexto_negrito('descrição')} do produto {formatarTexto_italico(f\"(atual: {produto.descricao})\")}: \"\n            precoText = f\"Digite o novo {formatarTexto_negrito('preço')} do produto {formatarTexto_italico(f\"(atual: {produto.preco})\")}: \"",
        "detail": "src.utils.criarProduto",
        "documentation": {}
    },
    {
        "label": "criarUsuario",
        "kind": 2,
        "importPath": "src.utils.criarUsuario",
        "description": "src.utils.criarUsuario",
        "peekOfCode": "def criarUsuario(isRequired: bool, usuario: Usuario = None) -> Optional[Usuario]:\n    try:\n        nomeText = f\"Digite o {formatarTexto_negrito(\"nome\")} do usuário: \"\n        rgText = f\"Digite o {formatarTexto_negrito(\"rg\")} do usuário: \"\n        enderecoText = f\"Digite o {formatarTexto_negrito(\"endereço\")} do usuário: \"\n        if usuario:\n            nomeText = f\"Digite o novo {formatarTexto_negrito('nome')} do usuário {formatarTexto_italico(f\"(atual: {usuario.nome})\")}: \"\n            rgText = f\"Digite o novo {formatarTexto_negrito('rg')} do usuário {formatarTexto_italico(f\"(atual: {usuario.rg})\")}: \"\n            enderecoText = f\"Digite o novo {formatarTexto_negrito('endereço')} do usuário {formatarTexto_italico(f\"(atual: {usuario.endereco})\")}: \"\n        nome = str(solicitarInput(nomeText, isRequired)).lower()",
        "detail": "src.utils.criarUsuario",
        "documentation": {}
    },
    {
        "label": "criarVendedor",
        "kind": 2,
        "importPath": "src.utils.criarVendedor",
        "description": "src.utils.criarVendedor",
        "peekOfCode": "def criarVendedor(isRequired: bool, vendedor: Vendedor = None) -> Optional[Vendedor]:\n    try:\n        nomeText = f\"Digite o {formatarTexto_negrito(\"nome\")} do vendedor: \"\n        rgText = f\"Digite o {formatarTexto_negrito(\"rg\")} do vendedor: \"\n        if vendedor:\n            nomeText = f\"Digite o novo {formatarTexto_negrito('nome')} do vendedor {formatarTexto_italico(f\"(atual: {vendedor.nome})\")}: \"\n            rgText = f\"Digite o novo {formatarTexto_negrito('rg')} do vendedor {formatarTexto_italico(f\"(atual: {vendedor.rg})\")}: \"\n        nome = solicitarInput(nomeText, isRequired)\n        rg = solicitarInput(rgText, isRequired)\n        vendedor = Vendedor(nome=nome, rg=rg, produtos=[])",
        "detail": "src.utils.criarVendedor",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito(texto):\n    return f\"\\033[1m{texto}\\033[0m\"\ndef formatarTexto_italico(texto):\n    return f\"\\033[3m{texto}\\033[0m\"\ndef formatarTexto_sublinhado(texto):\n    return f\"\\033[4m{texto}\\033[0m\"\ndef formatarTexto_tachado(texto):\n    return f\"\\033[9m{texto}\\033[0m\"\ndef formatarTexto_amarelo(texto):\n    return f\"\\033[33m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico(texto):\n    return f\"\\033[3m{texto}\\033[0m\"\ndef formatarTexto_sublinhado(texto):\n    return f\"\\033[4m{texto}\\033[0m\"\ndef formatarTexto_tachado(texto):\n    return f\"\\033[9m{texto}\\033[0m\"\ndef formatarTexto_amarelo(texto):\n    return f\"\\033[33m{texto}\\033[0m\"\ndef formatarTexto_azul(texto):\n    return f\"\\033[34m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado(texto):\n    return f\"\\033[4m{texto}\\033[0m\"\ndef formatarTexto_tachado(texto):\n    return f\"\\033[9m{texto}\\033[0m\"\ndef formatarTexto_amarelo(texto):\n    return f\"\\033[33m{texto}\\033[0m\"\ndef formatarTexto_azul(texto):\n    return f\"\\033[34m{texto}\\033[0m\"\ndef formatarTexto_verde(texto):\n    return f\"\\033[32m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado(texto):\n    return f\"\\033[9m{texto}\\033[0m\"\ndef formatarTexto_amarelo(texto):\n    return f\"\\033[33m{texto}\\033[0m\"\ndef formatarTexto_azul(texto):\n    return f\"\\033[34m{texto}\\033[0m\"\ndef formatarTexto_verde(texto):\n    return f\"\\033[32m{texto}\\033[0m\"\ndef formatarTexto_vermelho(texto):\n    return f\"\\033[31m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_amarelo",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_amarelo(texto):\n    return f\"\\033[33m{texto}\\033[0m\"\ndef formatarTexto_azul(texto):\n    return f\"\\033[34m{texto}\\033[0m\"\ndef formatarTexto_verde(texto):\n    return f\"\\033[32m{texto}\\033[0m\"\ndef formatarTexto_vermelho(texto):\n    return f\"\\033[31m{texto}\\033[0m\"\ndef formatarTexto_ciano(texto):\n    return f\"\\033[36m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_azul",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_azul(texto):\n    return f\"\\033[34m{texto}\\033[0m\"\ndef formatarTexto_verde(texto):\n    return f\"\\033[32m{texto}\\033[0m\"\ndef formatarTexto_vermelho(texto):\n    return f\"\\033[31m{texto}\\033[0m\"\ndef formatarTexto_ciano(texto):\n    return f\"\\033[36m{texto}\\033[0m\"\ndef formatarTexto_magenta(texto):\n    return f\"\\033[35m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_verde",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_verde(texto):\n    return f\"\\033[32m{texto}\\033[0m\"\ndef formatarTexto_vermelho(texto):\n    return f\"\\033[31m{texto}\\033[0m\"\ndef formatarTexto_ciano(texto):\n    return f\"\\033[36m{texto}\\033[0m\"\ndef formatarTexto_magenta(texto):\n    return f\"\\033[35m{texto}\\033[0m\"\ndef formatarTexto_branco(texto):\n    return f\"\\033[37m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_vermelho",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_vermelho(texto):\n    return f\"\\033[31m{texto}\\033[0m\"\ndef formatarTexto_ciano(texto):\n    return f\"\\033[36m{texto}\\033[0m\"\ndef formatarTexto_magenta(texto):\n    return f\"\\033[35m{texto}\\033[0m\"\ndef formatarTexto_branco(texto):\n    return f\"\\033[37m{texto}\\033[0m\"\ndef formatarTexto_preto(texto):\n    return f\"\\033[30m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_ciano",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_ciano(texto):\n    return f\"\\033[36m{texto}\\033[0m\"\ndef formatarTexto_magenta(texto):\n    return f\"\\033[35m{texto}\\033[0m\"\ndef formatarTexto_branco(texto):\n    return f\"\\033[37m{texto}\\033[0m\"\ndef formatarTexto_preto(texto):\n    return f\"\\033[30m{texto}\\033[0m\"\ndef formatarTexto_fundoAmarelo(texto):\n    return f\"\\033[43m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_magenta",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_magenta(texto):\n    return f\"\\033[35m{texto}\\033[0m\"\ndef formatarTexto_branco(texto):\n    return f\"\\033[37m{texto}\\033[0m\"\ndef formatarTexto_preto(texto):\n    return f\"\\033[30m{texto}\\033[0m\"\ndef formatarTexto_fundoAmarelo(texto):\n    return f\"\\033[43m{texto}\\033[0m\"\ndef formatarTexto_fundoAzul(texto):\n    return f\"\\033[44m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_branco",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_branco(texto):\n    return f\"\\033[37m{texto}\\033[0m\"\ndef formatarTexto_preto(texto):\n    return f\"\\033[30m{texto}\\033[0m\"\ndef formatarTexto_fundoAmarelo(texto):\n    return f\"\\033[43m{texto}\\033[0m\"\ndef formatarTexto_fundoAzul(texto):\n    return f\"\\033[44m{texto}\\033[0m\"\ndef formatarTexto_fundoVerde(texto):\n    return f\"\\033[42m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_preto",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_preto(texto):\n    return f\"\\033[30m{texto}\\033[0m\"\ndef formatarTexto_fundoAmarelo(texto):\n    return f\"\\033[43m{texto}\\033[0m\"\ndef formatarTexto_fundoAzul(texto):\n    return f\"\\033[44m{texto}\\033[0m\"\ndef formatarTexto_fundoVerde(texto):\n    return f\"\\033[42m{texto}\\033[0m\"\ndef formatarTexto_fundoVermelho(texto):\n    return f\"\\033[41m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_fundoAmarelo",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_fundoAmarelo(texto):\n    return f\"\\033[43m{texto}\\033[0m\"\ndef formatarTexto_fundoAzul(texto):\n    return f\"\\033[44m{texto}\\033[0m\"\ndef formatarTexto_fundoVerde(texto):\n    return f\"\\033[42m{texto}\\033[0m\"\ndef formatarTexto_fundoVermelho(texto):\n    return f\"\\033[41m{texto}\\033[0m\"\ndef formatarTexto_fundoCiano(texto):\n    return f\"\\033[46m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_fundoAzul",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_fundoAzul(texto):\n    return f\"\\033[44m{texto}\\033[0m\"\ndef formatarTexto_fundoVerde(texto):\n    return f\"\\033[42m{texto}\\033[0m\"\ndef formatarTexto_fundoVermelho(texto):\n    return f\"\\033[41m{texto}\\033[0m\"\ndef formatarTexto_fundoCiano(texto):\n    return f\"\\033[46m{texto}\\033[0m\"\ndef formatarTexto_fundoMagenta(texto):\n    return f\"\\033[45m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_fundoVerde",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_fundoVerde(texto):\n    return f\"\\033[42m{texto}\\033[0m\"\ndef formatarTexto_fundoVermelho(texto):\n    return f\"\\033[41m{texto}\\033[0m\"\ndef formatarTexto_fundoCiano(texto):\n    return f\"\\033[46m{texto}\\033[0m\"\ndef formatarTexto_fundoMagenta(texto):\n    return f\"\\033[45m{texto}\\033[0m\"\ndef formatarTexto_fundoBranco(texto):\n    return f\"\\033[47m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_fundoVermelho",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_fundoVermelho(texto):\n    return f\"\\033[41m{texto}\\033[0m\"\ndef formatarTexto_fundoCiano(texto):\n    return f\"\\033[46m{texto}\\033[0m\"\ndef formatarTexto_fundoMagenta(texto):\n    return f\"\\033[45m{texto}\\033[0m\"\ndef formatarTexto_fundoBranco(texto):\n    return f\"\\033[47m{texto}\\033[0m\"\ndef formatarTexto_fundoPreto(texto):\n    return f\"\\033[40m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_fundoCiano",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_fundoCiano(texto):\n    return f\"\\033[46m{texto}\\033[0m\"\ndef formatarTexto_fundoMagenta(texto):\n    return f\"\\033[45m{texto}\\033[0m\"\ndef formatarTexto_fundoBranco(texto):\n    return f\"\\033[47m{texto}\\033[0m\"\ndef formatarTexto_fundoPreto(texto):\n    return f\"\\033[40m{texto}\\033[0m\"\ndef formatarTexto_negrito_amarelo(texto):\n    return f\"\\033[1;33m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_fundoMagenta",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_fundoMagenta(texto):\n    return f\"\\033[45m{texto}\\033[0m\"\ndef formatarTexto_fundoBranco(texto):\n    return f\"\\033[47m{texto}\\033[0m\"\ndef formatarTexto_fundoPreto(texto):\n    return f\"\\033[40m{texto}\\033[0m\"\ndef formatarTexto_negrito_amarelo(texto):\n    return f\"\\033[1;33m{texto}\\033[0m\"\ndef formatarTexto_negrito_azul(texto):\n    return f\"\\033[1;34m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_fundoBranco",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_fundoBranco(texto):\n    return f\"\\033[47m{texto}\\033[0m\"\ndef formatarTexto_fundoPreto(texto):\n    return f\"\\033[40m{texto}\\033[0m\"\ndef formatarTexto_negrito_amarelo(texto):\n    return f\"\\033[1;33m{texto}\\033[0m\"\ndef formatarTexto_negrito_azul(texto):\n    return f\"\\033[1;34m{texto}\\033[0m\"\ndef formatarTexto_negrito_verde(texto):\n    return f\"\\033[1;32m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_fundoPreto",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_fundoPreto(texto):\n    return f\"\\033[40m{texto}\\033[0m\"\ndef formatarTexto_negrito_amarelo(texto):\n    return f\"\\033[1;33m{texto}\\033[0m\"\ndef formatarTexto_negrito_azul(texto):\n    return f\"\\033[1;34m{texto}\\033[0m\"\ndef formatarTexto_negrito_verde(texto):\n    return f\"\\033[1;32m{texto}\\033[0m\"\ndef formatarTexto_negrito_vermelho(texto):\n    return f\"\\033[1;31m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_amarelo",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_amarelo(texto):\n    return f\"\\033[1;33m{texto}\\033[0m\"\ndef formatarTexto_negrito_azul(texto):\n    return f\"\\033[1;34m{texto}\\033[0m\"\ndef formatarTexto_negrito_verde(texto):\n    return f\"\\033[1;32m{texto}\\033[0m\"\ndef formatarTexto_negrito_vermelho(texto):\n    return f\"\\033[1;31m{texto}\\033[0m\"\ndef formatarTexto_negrito_ciano(texto):\n    return f\"\\033[1;36m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_azul",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_azul(texto):\n    return f\"\\033[1;34m{texto}\\033[0m\"\ndef formatarTexto_negrito_verde(texto):\n    return f\"\\033[1;32m{texto}\\033[0m\"\ndef formatarTexto_negrito_vermelho(texto):\n    return f\"\\033[1;31m{texto}\\033[0m\"\ndef formatarTexto_negrito_ciano(texto):\n    return f\"\\033[1;36m{texto}\\033[0m\"\ndef formatarTexto_negrito_magenta(texto):\n    return f\"\\033[1;35m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_verde",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_verde(texto):\n    return f\"\\033[1;32m{texto}\\033[0m\"\ndef formatarTexto_negrito_vermelho(texto):\n    return f\"\\033[1;31m{texto}\\033[0m\"\ndef formatarTexto_negrito_ciano(texto):\n    return f\"\\033[1;36m{texto}\\033[0m\"\ndef formatarTexto_negrito_magenta(texto):\n    return f\"\\033[1;35m{texto}\\033[0m\"\ndef formatarTexto_negrito_branco(texto):\n    return f\"\\033[1;37m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_vermelho",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_vermelho(texto):\n    return f\"\\033[1;31m{texto}\\033[0m\"\ndef formatarTexto_negrito_ciano(texto):\n    return f\"\\033[1;36m{texto}\\033[0m\"\ndef formatarTexto_negrito_magenta(texto):\n    return f\"\\033[1;35m{texto}\\033[0m\"\ndef formatarTexto_negrito_branco(texto):\n    return f\"\\033[1;37m{texto}\\033[0m\"\ndef formatarTexto_negrito_preto(texto):\n    return f\"\\033[1;30m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_ciano",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_ciano(texto):\n    return f\"\\033[1;36m{texto}\\033[0m\"\ndef formatarTexto_negrito_magenta(texto):\n    return f\"\\033[1;35m{texto}\\033[0m\"\ndef formatarTexto_negrito_branco(texto):\n    return f\"\\033[1;37m{texto}\\033[0m\"\ndef formatarTexto_negrito_preto(texto):\n    return f\"\\033[1;30m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoAmarelo(texto):\n    return f\"\\033[1;43m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_magenta",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_magenta(texto):\n    return f\"\\033[1;35m{texto}\\033[0m\"\ndef formatarTexto_negrito_branco(texto):\n    return f\"\\033[1;37m{texto}\\033[0m\"\ndef formatarTexto_negrito_preto(texto):\n    return f\"\\033[1;30m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoAmarelo(texto):\n    return f\"\\033[1;43m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoAzul(texto):\n    return f\"\\033[1;44m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_branco",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_branco(texto):\n    return f\"\\033[1;37m{texto}\\033[0m\"\ndef formatarTexto_negrito_preto(texto):\n    return f\"\\033[1;30m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoAmarelo(texto):\n    return f\"\\033[1;43m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoAzul(texto):\n    return f\"\\033[1;44m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoVerde(texto):\n    return f\"\\033[1;42m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_preto",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_preto(texto):\n    return f\"\\033[1;30m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoAmarelo(texto):\n    return f\"\\033[1;43m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoAzul(texto):\n    return f\"\\033[1;44m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoVerde(texto):\n    return f\"\\033[1;42m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoVermelho(texto):\n    return f\"\\033[1;41m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_fundoAmarelo",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_fundoAmarelo(texto):\n    return f\"\\033[1;43m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoAzul(texto):\n    return f\"\\033[1;44m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoVerde(texto):\n    return f\"\\033[1;42m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoVermelho(texto):\n    return f\"\\033[1;41m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoCiano(texto):\n    return f\"\\033[1;46m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_fundoAzul",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_fundoAzul(texto):\n    return f\"\\033[1;44m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoVerde(texto):\n    return f\"\\033[1;42m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoVermelho(texto):\n    return f\"\\033[1;41m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoCiano(texto):\n    return f\"\\033[1;46m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoMagenta(texto):\n    return f\"\\033[1;45m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_fundoVerde",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_fundoVerde(texto):\n    return f\"\\033[1;42m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoVermelho(texto):\n    return f\"\\033[1;41m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoCiano(texto):\n    return f\"\\033[1;46m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoMagenta(texto):\n    return f\"\\033[1;45m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoBranco(texto):\n    return f\"\\033[1;47m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_fundoVermelho",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_fundoVermelho(texto):\n    return f\"\\033[1;41m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoCiano(texto):\n    return f\"\\033[1;46m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoMagenta(texto):\n    return f\"\\033[1;45m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoBranco(texto):\n    return f\"\\033[1;47m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoPreto(texto):\n    return f\"\\033[1;40m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_fundoCiano",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_fundoCiano(texto):\n    return f\"\\033[1;46m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoMagenta(texto):\n    return f\"\\033[1;45m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoBranco(texto):\n    return f\"\\033[1;47m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoPreto(texto):\n    return f\"\\033[1;40m{texto}\\033[0m\"\ndef formatarTexto_italico_amarelo(texto):\n    return f\"\\033[3;33m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_fundoMagenta",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_fundoMagenta(texto):\n    return f\"\\033[1;45m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoBranco(texto):\n    return f\"\\033[1;47m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoPreto(texto):\n    return f\"\\033[1;40m{texto}\\033[0m\"\ndef formatarTexto_italico_amarelo(texto):\n    return f\"\\033[3;33m{texto}\\033[0m\"\ndef formatarTexto_italico_azul(texto):\n    return f\"\\033[3;34m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_fundoBranco",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_fundoBranco(texto):\n    return f\"\\033[1;47m{texto}\\033[0m\"\ndef formatarTexto_negrito_fundoPreto(texto):\n    return f\"\\033[1;40m{texto}\\033[0m\"\ndef formatarTexto_italico_amarelo(texto):\n    return f\"\\033[3;33m{texto}\\033[0m\"\ndef formatarTexto_italico_azul(texto):\n    return f\"\\033[3;34m{texto}\\033[0m\"\ndef formatarTexto_italico_verde(texto):\n    return f\"\\033[3;32m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_negrito_fundoPreto",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_negrito_fundoPreto(texto):\n    return f\"\\033[1;40m{texto}\\033[0m\"\ndef formatarTexto_italico_amarelo(texto):\n    return f\"\\033[3;33m{texto}\\033[0m\"\ndef formatarTexto_italico_azul(texto):\n    return f\"\\033[3;34m{texto}\\033[0m\"\ndef formatarTexto_italico_verde(texto):\n    return f\"\\033[3;32m{texto}\\033[0m\"\ndef formatarTexto_italico_vermelho(texto):\n    return f\"\\033[3;31m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_amarelo",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_amarelo(texto):\n    return f\"\\033[3;33m{texto}\\033[0m\"\ndef formatarTexto_italico_azul(texto):\n    return f\"\\033[3;34m{texto}\\033[0m\"\ndef formatarTexto_italico_verde(texto):\n    return f\"\\033[3;32m{texto}\\033[0m\"\ndef formatarTexto_italico_vermelho(texto):\n    return f\"\\033[3;31m{texto}\\033[0m\"\ndef formatarTexto_italico_ciano(texto):\n    return f\"\\033[3;36m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_azul",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_azul(texto):\n    return f\"\\033[3;34m{texto}\\033[0m\"\ndef formatarTexto_italico_verde(texto):\n    return f\"\\033[3;32m{texto}\\033[0m\"\ndef formatarTexto_italico_vermelho(texto):\n    return f\"\\033[3;31m{texto}\\033[0m\"\ndef formatarTexto_italico_ciano(texto):\n    return f\"\\033[3;36m{texto}\\033[0m\"\ndef formatarTexto_italico_magenta(texto):\n    return f\"\\033[3;35m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_verde",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_verde(texto):\n    return f\"\\033[3;32m{texto}\\033[0m\"\ndef formatarTexto_italico_vermelho(texto):\n    return f\"\\033[3;31m{texto}\\033[0m\"\ndef formatarTexto_italico_ciano(texto):\n    return f\"\\033[3;36m{texto}\\033[0m\"\ndef formatarTexto_italico_magenta(texto):\n    return f\"\\033[3;35m{texto}\\033[0m\"\ndef formatarTexto_italico_branco(texto):\n    return f\"\\033[3;37m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_vermelho",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_vermelho(texto):\n    return f\"\\033[3;31m{texto}\\033[0m\"\ndef formatarTexto_italico_ciano(texto):\n    return f\"\\033[3;36m{texto}\\033[0m\"\ndef formatarTexto_italico_magenta(texto):\n    return f\"\\033[3;35m{texto}\\033[0m\"\ndef formatarTexto_italico_branco(texto):\n    return f\"\\033[3;37m{texto}\\033[0m\"\ndef formatarTexto_italico_preto(texto):\n    return f\"\\033[3;30m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_ciano",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_ciano(texto):\n    return f\"\\033[3;36m{texto}\\033[0m\"\ndef formatarTexto_italico_magenta(texto):\n    return f\"\\033[3;35m{texto}\\033[0m\"\ndef formatarTexto_italico_branco(texto):\n    return f\"\\033[3;37m{texto}\\033[0m\"\ndef formatarTexto_italico_preto(texto):\n    return f\"\\033[3;30m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoAmarelo(texto):\n    return f\"\\033[3;43m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_magenta",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_magenta(texto):\n    return f\"\\033[3;35m{texto}\\033[0m\"\ndef formatarTexto_italico_branco(texto):\n    return f\"\\033[3;37m{texto}\\033[0m\"\ndef formatarTexto_italico_preto(texto):\n    return f\"\\033[3;30m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoAmarelo(texto):\n    return f\"\\033[3;43m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoAzul(texto):\n    return f\"\\033[3;44m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_branco",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_branco(texto):\n    return f\"\\033[3;37m{texto}\\033[0m\"\ndef formatarTexto_italico_preto(texto):\n    return f\"\\033[3;30m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoAmarelo(texto):\n    return f\"\\033[3;43m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoAzul(texto):\n    return f\"\\033[3;44m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoVerde(texto):\n    return f\"\\033[3;42m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_preto",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_preto(texto):\n    return f\"\\033[3;30m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoAmarelo(texto):\n    return f\"\\033[3;43m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoAzul(texto):\n    return f\"\\033[3;44m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoVerde(texto):\n    return f\"\\033[3;42m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoVermelho(texto):\n    return f\"\\033[3;41m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_fundoAmarelo",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_fundoAmarelo(texto):\n    return f\"\\033[3;43m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoAzul(texto):\n    return f\"\\033[3;44m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoVerde(texto):\n    return f\"\\033[3;42m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoVermelho(texto):\n    return f\"\\033[3;41m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoCiano(texto):\n    return f\"\\033[3;46m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_fundoAzul",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_fundoAzul(texto):\n    return f\"\\033[3;44m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoVerde(texto):\n    return f\"\\033[3;42m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoVermelho(texto):\n    return f\"\\033[3;41m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoCiano(texto):\n    return f\"\\033[3;46m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoMagenta(texto):\n    return f\"\\033[3;45m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_fundoVerde",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_fundoVerde(texto):\n    return f\"\\033[3;42m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoVermelho(texto):\n    return f\"\\033[3;41m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoCiano(texto):\n    return f\"\\033[3;46m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoMagenta(texto):\n    return f\"\\033[3;45m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoBranco(texto):\n    return f\"\\033[3;47m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_fundoVermelho",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_fundoVermelho(texto):\n    return f\"\\033[3;41m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoCiano(texto):\n    return f\"\\033[3;46m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoMagenta(texto):\n    return f\"\\033[3;45m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoBranco(texto):\n    return f\"\\033[3;47m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoPreto(texto):\n    return f\"\\033[3;40m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_fundoCiano",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_fundoCiano(texto):\n    return f\"\\033[3;46m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoMagenta(texto):\n    return f\"\\033[3;45m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoBranco(texto):\n    return f\"\\033[3;47m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoPreto(texto):\n    return f\"\\033[3;40m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_amarelo(texto):\n    return f\"\\033[4;33m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_fundoMagenta",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_fundoMagenta(texto):\n    return f\"\\033[3;45m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoBranco(texto):\n    return f\"\\033[3;47m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoPreto(texto):\n    return f\"\\033[3;40m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_amarelo(texto):\n    return f\"\\033[4;33m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_azul(texto):\n    return f\"\\033[4;34m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_fundoBranco",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_fundoBranco(texto):\n    return f\"\\033[3;47m{texto}\\033[0m\"\ndef formatarTexto_italico_fundoPreto(texto):\n    return f\"\\033[3;40m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_amarelo(texto):\n    return f\"\\033[4;33m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_azul(texto):\n    return f\"\\033[4;34m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_verde(texto):\n    return f\"\\033[4;32m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_italico_fundoPreto",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_italico_fundoPreto(texto):\n    return f\"\\033[3;40m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_amarelo(texto):\n    return f\"\\033[4;33m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_azul(texto):\n    return f\"\\033[4;34m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_verde(texto):\n    return f\"\\033[4;32m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_vermelho(texto):\n    return f\"\\033[4;31m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_amarelo",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_amarelo(texto):\n    return f\"\\033[4;33m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_azul(texto):\n    return f\"\\033[4;34m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_verde(texto):\n    return f\"\\033[4;32m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_vermelho(texto):\n    return f\"\\033[4;31m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_ciano(texto):\n    return f\"\\033[4;36m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_azul",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_azul(texto):\n    return f\"\\033[4;34m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_verde(texto):\n    return f\"\\033[4;32m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_vermelho(texto):\n    return f\"\\033[4;31m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_ciano(texto):\n    return f\"\\033[4;36m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_magenta(texto):\n    return f\"\\033[4;35m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_verde",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_verde(texto):\n    return f\"\\033[4;32m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_vermelho(texto):\n    return f\"\\033[4;31m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_ciano(texto):\n    return f\"\\033[4;36m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_magenta(texto):\n    return f\"\\033[4;35m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_branco(texto):\n    return f\"\\033[4;37m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_vermelho",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_vermelho(texto):\n    return f\"\\033[4;31m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_ciano(texto):\n    return f\"\\033[4;36m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_magenta(texto):\n    return f\"\\033[4;35m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_branco(texto):\n    return f\"\\033[4;37m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_preto(texto):\n    return f\"\\033[4;30m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_ciano",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_ciano(texto):\n    return f\"\\033[4;36m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_magenta(texto):\n    return f\"\\033[4;35m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_branco(texto):\n    return f\"\\033[4;37m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_preto(texto):\n    return f\"\\033[4;30m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoAmarelo(texto):\n    return f\"\\033[4;43m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_magenta",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_magenta(texto):\n    return f\"\\033[4;35m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_branco(texto):\n    return f\"\\033[4;37m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_preto(texto):\n    return f\"\\033[4;30m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoAmarelo(texto):\n    return f\"\\033[4;43m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoAzul(texto):\n    return f\"\\033[4;44m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_branco",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_branco(texto):\n    return f\"\\033[4;37m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_preto(texto):\n    return f\"\\033[4;30m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoAmarelo(texto):\n    return f\"\\033[4;43m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoAzul(texto):\n    return f\"\\033[4;44m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoVerde(texto):\n    return f\"\\033[4;42m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_preto",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_preto(texto):\n    return f\"\\033[4;30m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoAmarelo(texto):\n    return f\"\\033[4;43m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoAzul(texto):\n    return f\"\\033[4;44m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoVerde(texto):\n    return f\"\\033[4;42m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoVermelho(texto):\n    return f\"\\033[4;41m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_fundoAmarelo",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_fundoAmarelo(texto):\n    return f\"\\033[4;43m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoAzul(texto):\n    return f\"\\033[4;44m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoVerde(texto):\n    return f\"\\033[4;42m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoVermelho(texto):\n    return f\"\\033[4;41m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoCiano(texto):\n    return f\"\\033[4;46m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_fundoAzul",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_fundoAzul(texto):\n    return f\"\\033[4;44m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoVerde(texto):\n    return f\"\\033[4;42m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoVermelho(texto):\n    return f\"\\033[4;41m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoCiano(texto):\n    return f\"\\033[4;46m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoMagenta(texto):\n    return f\"\\033[4;45m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_fundoVerde",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_fundoVerde(texto):\n    return f\"\\033[4;42m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoVermelho(texto):\n    return f\"\\033[4;41m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoCiano(texto):\n    return f\"\\033[4;46m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoMagenta(texto):\n    return f\"\\033[4;45m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoBranco(texto):\n    return f\"\\033[4;47m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_fundoVermelho",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_fundoVermelho(texto):\n    return f\"\\033[4;41m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoCiano(texto):\n    return f\"\\033[4;46m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoMagenta(texto):\n    return f\"\\033[4;45m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoBranco(texto):\n    return f\"\\033[4;47m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoPreto(texto):\n    return f\"\\033[4;40m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_fundoCiano",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_fundoCiano(texto):\n    return f\"\\033[4;46m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoMagenta(texto):\n    return f\"\\033[4;45m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoBranco(texto):\n    return f\"\\033[4;47m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoPreto(texto):\n    return f\"\\033[4;40m{texto}\\033[0m\"\ndef formatarTexto_tachado_amarelo(texto):\n    return f\"\\033[9;33m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_fundoMagenta",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_fundoMagenta(texto):\n    return f\"\\033[4;45m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoBranco(texto):\n    return f\"\\033[4;47m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoPreto(texto):\n    return f\"\\033[4;40m{texto}\\033[0m\"\ndef formatarTexto_tachado_amarelo(texto):\n    return f\"\\033[9;33m{texto}\\033[0m\"\ndef formatarTexto_tachado_azul(texto):\n    return f\"\\033[9;34m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_fundoBranco",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_fundoBranco(texto):\n    return f\"\\033[4;47m{texto}\\033[0m\"\ndef formatarTexto_sublinhado_fundoPreto(texto):\n    return f\"\\033[4;40m{texto}\\033[0m\"\ndef formatarTexto_tachado_amarelo(texto):\n    return f\"\\033[9;33m{texto}\\033[0m\"\ndef formatarTexto_tachado_azul(texto):\n    return f\"\\033[9;34m{texto}\\033[0m\"\ndef formatarTexto_tachado_verde(texto):\n    return f\"\\033[9;32m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_sublinhado_fundoPreto",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_sublinhado_fundoPreto(texto):\n    return f\"\\033[4;40m{texto}\\033[0m\"\ndef formatarTexto_tachado_amarelo(texto):\n    return f\"\\033[9;33m{texto}\\033[0m\"\ndef formatarTexto_tachado_azul(texto):\n    return f\"\\033[9;34m{texto}\\033[0m\"\ndef formatarTexto_tachado_verde(texto):\n    return f\"\\033[9;32m{texto}\\033[0m\"\ndef formatarTexto_tachado_vermelho(texto):\n    return f\"\\033[9;31m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_amarelo",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_amarelo(texto):\n    return f\"\\033[9;33m{texto}\\033[0m\"\ndef formatarTexto_tachado_azul(texto):\n    return f\"\\033[9;34m{texto}\\033[0m\"\ndef formatarTexto_tachado_verde(texto):\n    return f\"\\033[9;32m{texto}\\033[0m\"\ndef formatarTexto_tachado_vermelho(texto):\n    return f\"\\033[9;31m{texto}\\033[0m\"\ndef formatarTexto_tachado_ciano(texto):\n    return f\"\\033[9;36m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_azul",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_azul(texto):\n    return f\"\\033[9;34m{texto}\\033[0m\"\ndef formatarTexto_tachado_verde(texto):\n    return f\"\\033[9;32m{texto}\\033[0m\"\ndef formatarTexto_tachado_vermelho(texto):\n    return f\"\\033[9;31m{texto}\\033[0m\"\ndef formatarTexto_tachado_ciano(texto):\n    return f\"\\033[9;36m{texto}\\033[0m\"\ndef formatarTexto_tachado_magenta(texto):\n    return f\"\\033[9;35m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_verde",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_verde(texto):\n    return f\"\\033[9;32m{texto}\\033[0m\"\ndef formatarTexto_tachado_vermelho(texto):\n    return f\"\\033[9;31m{texto}\\033[0m\"\ndef formatarTexto_tachado_ciano(texto):\n    return f\"\\033[9;36m{texto}\\033[0m\"\ndef formatarTexto_tachado_magenta(texto):\n    return f\"\\033[9;35m{texto}\\033[0m\"\ndef formatarTexto_tachado_branco(texto):\n    return f\"\\033[9;37m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_vermelho",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_vermelho(texto):\n    return f\"\\033[9;31m{texto}\\033[0m\"\ndef formatarTexto_tachado_ciano(texto):\n    return f\"\\033[9;36m{texto}\\033[0m\"\ndef formatarTexto_tachado_magenta(texto):\n    return f\"\\033[9;35m{texto}\\033[0m\"\ndef formatarTexto_tachado_branco(texto):\n    return f\"\\033[9;37m{texto}\\033[0m\"\ndef formatarTexto_tachado_preto(texto):\n    return f\"\\033[9;30m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_ciano",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_ciano(texto):\n    return f\"\\033[9;36m{texto}\\033[0m\"\ndef formatarTexto_tachado_magenta(texto):\n    return f\"\\033[9;35m{texto}\\033[0m\"\ndef formatarTexto_tachado_branco(texto):\n    return f\"\\033[9;37m{texto}\\033[0m\"\ndef formatarTexto_tachado_preto(texto):\n    return f\"\\033[9;30m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoAmarelo(texto):\n    return f\"\\033[9;43m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_magenta",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_magenta(texto):\n    return f\"\\033[9;35m{texto}\\033[0m\"\ndef formatarTexto_tachado_branco(texto):\n    return f\"\\033[9;37m{texto}\\033[0m\"\ndef formatarTexto_tachado_preto(texto):\n    return f\"\\033[9;30m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoAmarelo(texto):\n    return f\"\\033[9;43m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoAzul(texto):\n    return f\"\\033[9;44m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_branco",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_branco(texto):\n    return f\"\\033[9;37m{texto}\\033[0m\"\ndef formatarTexto_tachado_preto(texto):\n    return f\"\\033[9;30m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoAmarelo(texto):\n    return f\"\\033[9;43m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoAzul(texto):\n    return f\"\\033[9;44m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoVerde(texto):\n    return f\"\\033[9;42m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_preto",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_preto(texto):\n    return f\"\\033[9;30m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoAmarelo(texto):\n    return f\"\\033[9;43m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoAzul(texto):\n    return f\"\\033[9;44m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoVerde(texto):\n    return f\"\\033[9;42m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoVermelho(texto):\n    return f\"\\033[9;41m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_fundoAmarelo",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_fundoAmarelo(texto):\n    return f\"\\033[9;43m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoAzul(texto):\n    return f\"\\033[9;44m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoVerde(texto):\n    return f\"\\033[9;42m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoVermelho(texto):\n    return f\"\\033[9;41m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoCiano(texto):\n    return f\"\\033[9;46m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_fundoAzul",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_fundoAzul(texto):\n    return f\"\\033[9;44m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoVerde(texto):\n    return f\"\\033[9;42m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoVermelho(texto):\n    return f\"\\033[9;41m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoCiano(texto):\n    return f\"\\033[9;46m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoMagenta(texto):\n    return f\"\\033[9;45m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_fundoVerde",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_fundoVerde(texto):\n    return f\"\\033[9;42m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoVermelho(texto):\n    return f\"\\033[9;41m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoCiano(texto):\n    return f\"\\033[9;46m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoMagenta(texto):\n    return f\"\\033[9;45m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoBranco(texto):\n    return f\"\\033[9;47m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_fundoVermelho",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_fundoVermelho(texto):\n    return f\"\\033[9;41m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoCiano(texto):\n    return f\"\\033[9;46m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoMagenta(texto):\n    return f\"\\033[9;45m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoBranco(texto):\n    return f\"\\033[9;47m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoPreto(texto):\n    return f\"\\033[9;40m{texto}\\033[0m\"",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_fundoCiano",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_fundoCiano(texto):\n    return f\"\\033[9;46m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoMagenta(texto):\n    return f\"\\033[9;45m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoBranco(texto):\n    return f\"\\033[9;47m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoPreto(texto):\n    return f\"\\033[9;40m{texto}\\033[0m\"\n# Path: src/utils/formatarTexto.py",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_fundoMagenta",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_fundoMagenta(texto):\n    return f\"\\033[9;45m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoBranco(texto):\n    return f\"\\033[9;47m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoPreto(texto):\n    return f\"\\033[9;40m{texto}\\033[0m\"\n# Path: src/utils/formatarTexto.py",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_fundoBranco",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_fundoBranco(texto):\n    return f\"\\033[9;47m{texto}\\033[0m\"\ndef formatarTexto_tachado_fundoPreto(texto):\n    return f\"\\033[9;40m{texto}\\033[0m\"\n# Path: src/utils/formatarTexto.py",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "formatarTexto_tachado_fundoPreto",
        "kind": 2,
        "importPath": "src.utils.formatarTexto",
        "description": "src.utils.formatarTexto",
        "peekOfCode": "def formatarTexto_tachado_fundoPreto(texto):\n    return f\"\\033[9;40m{texto}\\033[0m\"\n# Path: src/utils/formatarTexto.py",
        "detail": "src.utils.formatarTexto",
        "documentation": {}
    },
    {
        "label": "limparTerminal",
        "kind": 2,
        "importPath": "src.utils.limparTerminal",
        "description": "src.utils.limparTerminal",
        "peekOfCode": "def limparTerminal():\n    os.system('cls' if os.name == 'nt' else 'clear')\n# Path src/utils/limparTerminal.py",
        "detail": "src.utils.limparTerminal",
        "documentation": {}
    },
    {
        "label": "solicitarInput",
        "kind": 2,
        "importPath": "src.utils.solicitarInput",
        "description": "src.utils.solicitarInput",
        "peekOfCode": "def solicitarInput(prompt: str, isRequired: bool = False) -> str | None:\n    while True:\n        valor = input(prompt).strip()\n        if isRequired and not valor:\n            print(formatarTexto_amarelo(\"Valor não pode ser vazio\"))\n            continue\n        else:\n            return valor\n# Path: src/utils/solicitarInput.py",
        "detail": "src.utils.solicitarInput",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "index",
        "description": "index",
        "peekOfCode": "def main():\n    menuPrincipal()\n    limparTerminal()\n    driver.close()\nif __name__ == \"__main__\":\n    main()\n# Path: index.py",
        "detail": "index",
        "documentation": {}
    }
]